# Copyright 2013 The Flutter Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")
import("//third_party/flutter/flutter_config.gni")

if (graphic_standard_feature_enable_vulkan) {
  config("vulkan_flutter_config") {
    visibility = [ ":*" ]

    include_dirs = [
      "vulkan_application.h",
      "vulkan_backbuffer.h",
      "vulkan_command_buffer.h",
      "vulkan_debug_report.h",
      "vulkan_device.h",
      "vulkan_handle.h",
      "vulkan_hilog.h",
      "vulkan_image.h",
      "vulkan_interface.h",
      "vulkan_native_surface.h",
      "vulkan_native_surface_ohos.h",
      "vulkan_proc_table.h",
      "vulkan_provider.h",
      "vulkan_surface.h",
      "vulkan_swapchain.h",
      "vulkan_utilities.h",
      "vulkan_window.h",
    ]

    cflags = [
      "-Wall",
      "-Wno-unused-function",
      "-Wno-unused-variable",
      "-Wno-missing-braces",
      "-Wno-unused-private-field",
      "-Werror",
      "-g3",
    ]
  }

  config("vulkan_flutter_public_config") {
    include_dirs = [
      "//third_party/flutter/engine",
      "//third_party/flutter/engine/flutter/vulkan",
      "//foundation/graphic/graphic_2d/frameworks/surface/include",
      "//third_party/vulkan-headers/include",
      "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/include",
      "//foundation/graphic/graphic_2d/interfaces/inner_api/surface",
      "//commonlibrary/c_utils/base/include",
      "//third_party/flutter/skia",
    ]

    cflags = [ "-Wno-error=deprecated-declarations" ]

    defines = [
      "VK_USE_PLATFORM_OHOS_OPENHARMONY",
      "NDEBUG",
    ]
  }

  ohos_shared_library("vulkan_flutter") {
    sources = [
      "vulkan_application.cc",
      "vulkan_backbuffer.cc",
      "vulkan_command_buffer.cc",
      "vulkan_debug_report.cc",
      "vulkan_device.cc",
      "vulkan_handle.cc",
      "vulkan_image.cc",
      "vulkan_interface.cc",
      "vulkan_native_surface.cc",
      "vulkan_native_surface_ohos.cc",
      "vulkan_proc_table.cc",
      "vulkan_provider.cc",
      "vulkan_surface.cc",
      "vulkan_swapchain.cc",
      "vulkan_utilities.cc",
      "vulkan_window.cc",
    ]

    if (graphic_standard_feature_enable_vulkan) {
      defines = [ "RS_ENABLE_VK" ]
    }

    configs = [ ":vulkan_flutter_config" ]

    public_configs = [ ":vulkan_flutter_public_config" ]

    external_deps = [
      "c_utils:utils",
      "hilog_native:libhilog",
    ]

    public_deps = [
      "//foundation/graphic/graphic_2d:libsurface",
      "//third_party/flutter/build/skia:ace_skia_ohos",
      "//third_party/vulkan-loader/openharmony:vulkan_loader",
    ]

    part_name = "flutter"
    subsystem_name = flutter_subsystem
  }
} else {
  import("//build/fuchsia/sdk.gni")

  config("vulkan_config") {
    if (using_fuchsia_sdk) {
      include_dirs = [ "$fuchsia_sdk_root/vulkan/include" ]
    } else if (is_fuchsia) {
      include_dirs =
          [ "//third_party/vulkan_loader_and_validation_layers/include" ]
    } else {
      include_dirs = [ "//third_party/vulkan/src" ]
    }

    if (is_fuchsia) {
      defines = [ "VK_USE_PLATFORM_FUCHSIA=1" ]
    }
  }

  source_set("vulkan") {
    sources = [
      "vulkan_application.cc",
      "vulkan_application.h",
      "vulkan_backbuffer.cc",
      "vulkan_backbuffer.h",
      "vulkan_command_buffer.cc",
      "vulkan_command_buffer.h",
      "vulkan_debug_report.cc",
      "vulkan_debug_report.h",
      "vulkan_device.cc",
      "vulkan_device.h",
      "vulkan_handle.cc",
      "vulkan_handle.h",
      "vulkan_image.cc",
      "vulkan_image.h",
      "vulkan_interface.cc",
      "vulkan_interface.h",
      "vulkan_native_surface.cc",
      "vulkan_native_surface.h",
      "vulkan_proc_table.cc",
      "vulkan_proc_table.h",
      "vulkan_surface.cc",
      "vulkan_surface.h",
      "vulkan_swapchain.h",
      "vulkan_utilities.cc",
      "vulkan_utilities.h",
      "vulkan_window.cc",
      "vulkan_window.h",
    ]

    if (is_android) {
      sources += [
        "vulkan_native_surface_android.cc",
        "vulkan_native_surface_android.h",
        "vulkan_swapchain.cc",
      ]
    }
    if (is_fuchsia) {
      sources += [ "vulkan_swapchain_stub.cc" ]
    }

    deps = [
      "$flutter_root/fml",
      "//third_party/skia",
    ]

    public_configs = [
      ":vulkan_config",
      "$flutter_root:config",
    ]
  }
}
